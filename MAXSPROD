//DAY 22/100 
/*
we need to multiply the INDICES , not the numbers
the question wants us to find the CLOSEST larger numbers for every element , nd return the max product of their indices. In the given ex:

A : [ 5, 9, 6, 8, 6, 4, 6, 9, 5, 4, 9 ]
ans 80.

We get our ans at index - 9 which has value 4
for 4 : left spl value = index of 5 = 8
right spl value = index of 9 = 10
product = 8*10 = 80
and its the max product( we would get the max product for the highest possible values of left n right spl values!!


we need to multiply the INDICES , not the numbers
the question wants us to find the CLOSEST larger numbers for every element , nd return the max product of their indices. In the given ex:

A : [ 5, 9, 6, 8, 6, 4, 6, 9, 5, 4, 9 ]
ans 80.

We get our ans at index - 9 which has value 4
for 4 : left spl value = index of 5 = 8
right spl value = index of 9 = 10
product = 8*10 = 80
and its the max product( we would get the max product for the highest possible values of left n right spl values!!
*/
int Solution::maxSpecialProduct(vector<int> &A) {
    int prodmax = 0, i, j;
    long long int n = A.size();
    long long int lsv[n], rsv[n];
    for(i = 0; i<n; i++) {
        lsv[i] = 0;
        rsv[i] = 0;
    }
    for(i = 1; i<n; i++) {
        for(j = i-1; j>0; j--) {
            if(A[i] < A[j]) {
                lsv[i] = j;
                break;
            }
        }
        for(j = i+1; j<n; j++) {    
            if(A[i] < A[j]) {
                rsv[i] = j;
                break;
            }

        }    
        
        lsv[i] = lsv[i]*rsv[i];
        
        if(prodmax < lsv[i]) {
            prodmax = lsv[i];
        }
    }
    return prodmax%1000000007;
}

























