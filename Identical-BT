//DAY 100/100

/*
Identical Binary Trees
Asked in:  
Amazon
Given two binary trees, write a function to check if they are equal or not.

Two binary trees are considered equal if they are structurally identical and the nodes have the same value.

Return 0 / 1 ( 0 for false, 1 for true ) for this problem

Example :

Input : 

   1       1
  / \     / \
 2   3   2   3

Output : 
  1 or True
*/






















/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
int recur(TreeNode* A, TreeNode* B) {
    if(A&&B && A->val==B->val && recur(A->left, B->left)  && recur(A->right, B->right)) {
        return 1;
    }
    else if(A==NULL && B==NULL) {
        return 1;
    }
    
    else {
        return 0;
    }
}
 
int Solution::isSameTree(TreeNode* A, TreeNode* B) {
    recur(A, B);
    return recur(A, B);
}
