//DAY 38/100
/*
Given an integar A.

Compute and return the square root of A.

If A is not a perfect square, return floor(sqrt(A)).

DO NOT USE SQRT FUNCTION FROM STANDARD LIBRARY



Input Format

The first and only argument given is the integer A.
Output Format

Return floor(sqrt(A))
Constraints

1 <= A <= 10^9
For Example

Input 1:
    A = 11
Output 1:
    3

Input 2:
    A = 9
Output 2:
    3
*/

//WORKING: A square root will always be less than the sqaure of complete square integer. 


int Solution::sqrt(int A) {
    int flag, diff, max=INT_MAX, i=2;
    if(A==0) {
        return 0;
    }
    
    if(A==1) {
        flag=1;
    }
    while(pow(i,2) <= A) {
        if(pow(i,2)==A) {
            flag=i;
            break;                  //exit in case of perfect root
        }
        
        if(pow(i,2) < A) {
            diff = A-pow(i,2);
        }
        if(diff < max) {
            max=diff;
            flag=i;
        }
        i++;
        
    }
    return flag;
}
