//DAY 6/100

/*

Given an index k, return the kth row of the Pascal’s triangle.

Pascal’s triangle : To generate A[C] in row R, sum up A’[C] and A’[C-1] from previous row R - 1.

Example:

Input : k = 3

Return : [1,3,3,1]
 NOTE : k is 0 based. k = 0, corresponds to the row [1]. 
Note:Could you optimize your algorithm to use only O(k) extra space?

*/
//WORKING: Question has 0, 1, 2, 3; k=3; design logic c*(A-(i-1))/i; with c as a counter 


vector<int> Solution::getRow(int A) {
    vector<int> v(A+1);
    if(A == 0) {                           //in case of only one row
        v[0] = 1;
        return v;
    }
    int c=1;
    v[0] = c;
    for(int i = 1; i<=A; i++) {
        v[i] = c * (A-i+1)/i;
        c = v[i];
    }
 
    
    return v;   
}
