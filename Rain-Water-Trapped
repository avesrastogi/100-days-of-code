//DAY 68/100
/*
Rain Water Trapped
Asked in:  
Qualcomm
Amazon
Microsoft
Goldman Sachs
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.



Input Format

The only argument given is integer array A.
Output Format

Return the total water it is able to trap after raining..
For Example

Input 1:
    A = [0,1,0,2,1,0,1,3,2,1,2,1]
Output 1:
    6
Explaination 1: <img src="http://i.imgur.com/0qkUFco.png">
    
    In this case, 6 units of rain water (blue section) are being trapped.
*/







int Solution::trap(const vector<int> &A) {
    int n = A.size();
    if(n<3) {       //no water can be trapped
        return 0;
    }
    
    vector<int> left(n);
    vector<int> right(n);
    left[0]=A[0];
    //calculate the left for each array height
    for(int i=1; i<n; i++) {
        //use the maximum of last calculated left or last height
        left[i]=max(left[i-1], A[i-1]);
    }
    
    //calculate the right for each array height
    right[n-1]=A[n-1];
    for(int i=n-2; i>=0; i--) {
        //use the maximum of next calculated right or next height
        right[i]=max(right[i+1], A[i+1]);
    }
    
    //
    int sum=0;
    for(int i=0; i<n; i++) {
        //find the minimum of left and right subtract the current height
        int d = min(left[i], right[i]) - A[i];
        
        if(d<0) {
            d=0;
        }
        
        //keep adding the water retented at each stage
        sum+=d;
    }
    
    return sum;
}
