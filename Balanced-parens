//DAY 69/100
/*
Generate all Parentheses
Asked in:  
Amazon
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

Return 0 / 1 ( 0 for false, 1 for true ) for this problem
*/


int Solution::isValid(string A) {
    
    
    stack<char> st;
            map<char, char> matchingBracket; 
            matchingBracket['{'] = '}';
            matchingBracket['['] = ']';
            matchingBracket['('] = ')';
            for (int i = 0; i < A.length(); i++) {
                if (A[i] == '(' || A[i] == '{' || A[i] == '[') {
                    st.push(A[i]);
                } else if (st.empty() || matchingBracket[st.top()] != A[i]) {
                    return 0;
                } else {
                    st.pop();
                }
            }
        if(st.empty()) {
            return 1;
        }
        else {
            return 0;
        }
    
}
