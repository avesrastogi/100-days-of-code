//DAY 55/100
/*

Intersection Of Sorted Arrays
Asked in:  
Facebook
Google
Find the intersection of two sorted arrays.
OR in other words,
Given 2 sorted arrays, find all the elements which occur in both the arrays.

Example :

Input : 
    A : [1 2 3 3 4 5 6]
    B : [3 3 5]

Output : [3 3 5]

Input : 
    A : [1 2 3 3 4 5 6]
    B : [3 5]

Output : [3 5]
 NOTE : For the purpose of this problem ( as also conveyed by the sample case ), assume that elements that appear more than once in both arrays should be included multiple times in the final output. 
*/




vector<int> Solution::intersect(const vector<int> &A, const vector<int> &B) {
    vector<int> ans;
    int i=0, j=0;
    //std::unique(A.begin(), A.end());
    while(i<A.size() && j<B.size()) {
        if(A[i]==B[j]) {        //A: 1 2 3 3 4 5 6,
                                //B: 3 3 5
            ans.push_back(B[j]);            //for A3, B3 push
            i++;
            j++;
        }        
        
        else if(A[i]<B[j]) {                //for A1, B3 forward i in A
            i++;
        }
        else {
            j++;                            //for B[j]<A[i]: j++
        }
    }

    return ans;
}
