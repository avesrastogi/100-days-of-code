//DAY 66/100
/*
Rotate List
Asked in:  
Amazon
Given a list, rotate the list to the right by k places, where k is non-negative.

For example:

Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL

*/





/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
ListNode* Solution::rotateRight(ListNode* A, int B) {
    ListNode *p=A, *last=NULL;
    int n=0;
    while(p!=NULL) {
        n++;
        last=p;
        p=p->next;
    }
    

    int count=0;
    ListNode *q=A, *prev=NULL;
    B=B%n;            //for case of 6: 1 2 3 4 5 6 , B=90;  result = 1 2 3 4 5 6
    B=n-B;
        
    if(B==n) {
        return A;
    }
    
    while(B--) {
        prev=q;
        q=q->next;
    }
    last->next=A;
    prev->next=NULL;
    A=q;
        
    return A;
}
