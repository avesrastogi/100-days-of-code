//DAY 73/100
/*
Permutations
Asked in:  
Microsoft
Adobe
Google
Given a collection of numbers, return all possible permutations.

Example:

[1,2,3] will have the following permutations:

[1,2,3]
[1,3,2]
[2,1,3] 
[2,3,1] 
[3,1,2] 
[3,2,1]
 NOTE
No two entries in the permutation sequence should be the same.
For the purpose of this problem, assume that all the numbers in the collection are unique.
 Warning : DO NOT USE LIBRARY FUNCTION FOR GENERATING PERMUTATIONS.
Example : next_permutations in C++ / itertools.permutations in python.
If you do, we will disqualify your submission retroactively and give you penalty points. 
*/







void call_something(vector<int> &temp, int low, int high, vector<vector<int>> &res) {
    if(low==high) {
        res.push_back(temp);
    }
    
    for(int i=low; i<=high; i++) {
        //cout<<"1";
        swap(temp[i], temp[low]);
        call_something(temp, low+1, high, res);
        swap(temp[low], temp[i]);
    }
    
    return;
}


vector<vector<int> > Solution::permute(vector<int> &A) {
    vector<vector<int>> res;
    call_something(A, 0, A.size()-1, res);
    
    return res;
}
